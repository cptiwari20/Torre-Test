[{"D:\\Projects\\Tests\\Torre-Test\\my-app\\src\\index.js":"1","D:\\Projects\\Tests\\Torre-Test\\my-app\\src\\reportWebVitals.js":"2","D:\\Projects\\Tests\\Torre-Test\\my-app\\src\\App.js":"3","D:\\Projects\\Tests\\Torre-Test\\my-app\\src\\components\\Home.js":"4","D:\\Projects\\Tests\\Torre-Test\\my-app\\src\\components\\search.js":"5","D:\\Projects\\Tests\\Torre-Test\\my-app\\src\\components\\Search.js":"6","D:\\Projects\\Tests\\Torre-Test\\my-app\\src\\components\\results.js":"7","D:\\Projects\\Tests\\Torre-Test\\my-app\\src\\components\\Results.js":"8","D:\\Projects\\Tests\\Torre-Test\\my-app\\src\\components\\JobCard.js":"9","D:\\Projects\\Tests\\Torre-Test\\my-app\\src\\components\\ProfileCard.js":"10"},{"size":500,"mtime":1610363027922,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1610363027922,"results":"13","hashOfConfig":"12"},{"size":192,"mtime":1610444646092,"results":"14","hashOfConfig":"12"},{"size":568,"mtime":1610444970095,"results":"15","hashOfConfig":"12"},{"size":1702,"mtime":1610383970440,"results":"16","hashOfConfig":"12"},{"size":2582,"mtime":1610436473648,"results":"17","hashOfConfig":"12"},{"size":970,"mtime":1610384794494,"results":"18","hashOfConfig":"12"},{"size":978,"mtime":1610432023554,"results":"19","hashOfConfig":"12"},{"size":3888,"mtime":1610444997141,"results":"20","hashOfConfig":"12"},{"size":2288,"mtime":1610434246588,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"iatt72",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"24"},"D:\\Projects\\Tests\\Torre-Test\\my-app\\src\\index.js",[],["49","50"],"D:\\Projects\\Tests\\Torre-Test\\my-app\\src\\reportWebVitals.js",[],"D:\\Projects\\Tests\\Torre-Test\\my-app\\src\\App.js",[],"D:\\Projects\\Tests\\Torre-Test\\my-app\\src\\components\\Home.js",[],"D:\\Projects\\Tests\\Torre-Test\\my-app\\src\\components\\search.js",["51"],"import React from 'react';\r\nimport Layout from '../layout/search';\r\n\r\nexport default () => {\r\n    return <Layout>\r\n        <h1 className=\"heading-main fw-bold\">Find Jobs & People.</h1>\r\n        <input className=\"input-element\" type=\"text\" placeholder=\"Enter the search term\" />\r\n        <select className=\"input-element\">\r\n            <option value=\"Jobs\">Jobs</option>\r\n            <option value=\"People\">People</option>\r\n        </select>\r\n        <button className=\"input-element btn-search fw-bold\">Find</button>\r\n    </Layout>\r\n}",["52","53"],"D:\\Projects\\Tests\\Torre-Test\\my-app\\src\\components\\Search.js",["54"],"import React, { useState } from 'react';\r\n\r\nexport default ({getResults}) => {\r\n    const [searchString, setSearchString] = useState('');\r\n    const [seachType, setSeachType] = useState('opportunities');\r\n    const [results, setResults] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSearch = (e) => {\r\n        if(!searchString) return setError('Please add some charachers to search!')\r\n        setLoading(true)\r\n        const url = `https://search.torre.co/${seachType}/_search/?offset=0&size=10&aggregate=true&lang=en`\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({name: { term: searchString}})\r\n        }).then(async (res) => {\r\n            let data = await res.json()\r\n            getResults({\r\n                seachType,\r\n                results: data.results\r\n            });\r\n            setResults(data.results)\r\n            if(data.results.length === 0){\r\n                setError('No results found! Please search again!')\r\n            }\r\n            setLoading(false)\r\n        }).catch((e) => {   \r\n            console.log(e)\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    const handleValueChange = (value, key) => {\r\n        setError('')\r\n        setLoading(false)\r\n        setResults([])\r\n        switch (key) {\r\n            case 'string':\r\n                return setSearchString(value)\r\n            case 'type':\r\n                return setSeachType(value)\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return <div className={results.length !== 0 ? \"section-container-left\": \"section-container-center\"}>\r\n      <div className=\"section-search\">\r\n        <h1 className=\"heading-main fw-bold\">Find Jobs & People.</h1>\r\n        <input \r\n            onChange={e => handleValueChange(e.target.value, 'string')} \r\n            className=\"input-element\"\r\n            type=\"text\" \r\n            placeholder=\"Enter the search term\" />\r\n        <select \r\n            onChange={e => handleValueChange(e.target.value, 'type')}\r\n            className=\"input-element\">\r\n            <option value=\"opportunities\">Jobs</option>\r\n            <option value=\"people\">People</option>\r\n        </select>\r\n        <button onClick={handleSearch} className=\"input-element btn-search fw-bold\">\r\n            {loading ? \"Loading...\" : \"Find\"}  \r\n        </button>\r\n        {error && <p className='error'>{error}</p>}\r\n      </div>\r\n    </div>   \r\n}","D:\\Projects\\Tests\\Torre-Test\\my-app\\src\\components\\results.js",["55"],"import Layout from '../layout/results';\r\n\r\nexport default () => {\r\n    return <Layout>\r\n        <h2 className=\"fw-bold color-grey\">Jobs available:</h2>\r\n          <div className=\"section-job-listing\"></div>\r\n    </Layout>\r\n}","D:\\Projects\\Tests\\Torre-Test\\my-app\\src\\components\\Results.js",["56","57"],"import React from 'react';\r\nimport JobCard from './JobCard';\r\nimport ProfileCard from './ProfileCard';\r\n\r\nexport default ({results, type}) => {\r\n    return <>\r\n        <div className=\"section-container-right\">\r\n            <div className=\"section-job-listing-container\">\r\n                <h2 className=\"fw-bold color-grey\">\r\n                    { type === 'people' ? 'People Available' : 'Jobs available:' } \r\n                </h2>\r\n                    { type === 'people' ?\r\n                    results.length && results.map((result, i) => {\r\n                        return <div key={i} className=\"section-people\">\r\n                            <ProfileCard  result={result} /> \r\n                        </div>\r\n                    }) : results.length && results.map((result, i) => {\r\n                        return <div key={i} className=\"section-job-listing \" key={i}> <JobCard  result={result} /></div>\r\n                    })}\r\n            </div>\r\n        </div>\r\n    </>\r\n}","D:\\Projects\\Tests\\Torre-Test\\my-app\\src\\components\\JobCard.js",["58","59","60","61"],"D:\\Projects\\Tests\\Torre-Test\\my-app\\src\\components\\ProfileCard.js",["62","63"],"import React from 'react';\r\n\r\nexport default ({result}) => {\r\n    const { compensations } = result;\r\n    return <>\r\n        <div className=\"people-card\">\r\n        <div className=\"people-card-image-section\">\r\n          <img  className=\"people-card-image\"  src={result.picture ?? \"https://torre-media.s3-us-west-2.amazonaws.com/subtorres/Gig/torre.png\"} alt=\"profile-pic\" />\r\n          <h2>{result.name}</h2>\r\n          <span>{result.professionalHeadline}</span>\r\n          <p>{result.locationName} {result.remoter && '(open for Remote jobs)'}</p>\r\n        </div>\r\n        {/* <div className=\"people-card-about-section\">\r\n          <span>About:</span>\r\n          <p>Co - Founder and CTA at XYZ, Full stack web developer, Entreprenuer and instructor.</p>\r\n        </div> */}\r\n        {result.openTo.length > 0   &&\r\n          <div className=\"people-card-openTo-section\">\r\n            <span>Open for: {\" \"}</span>\r\n              { result.openTo.map((skill, i) => {\r\n                return <p key={i + skill} className=\"pill\">{skill}</p>\r\n              })}\r\n          </div>}\r\n        <div className=\"people-card-contact-section\">\r\n          <span>Contact for:</span>\r\n          {compensations.employee && \r\n          <div className=\"skill-card\">\r\n            <span>Full time and part time employment.</span>\r\n            <span className=\"fw-bold font-x-small\">Starting at {compensations.employee.currency}  {compensations.employee.amount}/ {compensations.employee.periodicity}.</span>\r\n          </div>}\r\n          {compensations.freelancer && \r\n          <div className=\"skill-card\">\r\n            <span>Freelancing.</span>\r\n            <span className=\"fw-bold font-x-small\">Starting at {compensations.freelancer.currency}  {compensations.freelancer.amount}/ {compensations.freelancer.periodicity}</span>\r\n          </div>}\r\n          {compensations.intern && \r\n          <div className=\"skill-card\">\r\n            <span>Internship.</span>\r\n            <span className=\"fw-bold font-x-small\">Starting at {compensations.intern.currency}  {compensations.intern.amount}/ {compensations.intern.periodicity}</span>\r\n          </div>}\r\n        </div>\r\n        <a href={`https://bio.torre.co/en/${result.username}`} target=\"_blank\" className=\"btn-people fw-bold\">More</a>\r\n      </div>\r\n      </>\r\n}",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":4,"column":1,"nodeType":"70","endLine":14,"endColumn":2},{"ruleId":"64","replacedBy":"71"},{"ruleId":"66","replacedBy":"72"},{"ruleId":"68","severity":1,"message":"69","line":3,"column":1,"nodeType":"70","endLine":71,"endColumn":2},{"ruleId":"68","severity":1,"message":"69","line":3,"column":1,"nodeType":"70","endLine":8,"endColumn":2},{"ruleId":"68","severity":1,"message":"69","line":5,"column":1,"nodeType":"70","endLine":23,"endColumn":2},{"ruleId":"73","severity":1,"message":"74","line":18,"column":78,"nodeType":"75","endLine":18,"endColumn":85},{"ruleId":"68","severity":1,"message":"69","line":4,"column":1,"nodeType":"70","endLine":100,"endColumn":2},{"ruleId":"76","severity":1,"message":"77","line":40,"column":11,"nodeType":"78","endLine":40,"endColumn":91},{"ruleId":"79","severity":1,"message":"80","line":64,"column":24,"nodeType":"78","endLine":64,"endColumn":95},{"ruleId":"79","severity":1,"message":"80","line":91,"column":13,"nodeType":"78","endLine":92,"endColumn":72},{"ruleId":"68","severity":1,"message":"69","line":3,"column":1,"nodeType":"70","endLine":45,"endColumn":2},{"ruleId":"79","severity":1,"message":"80","line":42,"column":9,"nodeType":"78","endLine":42,"endColumn":111},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["81"],["82"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation"]